<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.0 on win32)" generated="20230421 17:13:10.802" rpa="false" schemaversion="3">
<suite id="s1" name="TEST DEMO" source="d:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\TEST_DEMO.robot">
<kw name="Init Test" library="GX1Testlib" type="SETUP">
<doc>Description:
 This should be called before any test can started for GX1
Arguments:</doc>
<msg timestamp="20230421 17:13:11.484" level="INFO">Loading the project at D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test</msg>
<msg timestamp="20230421 17:13:11.574" level="INFO">Squish Hook 192.168.80.130, gx1, C:\Users\xuf\.ssh\bsci</msg>
<msg timestamp="20230421 17:13:11.575" level="INFO">Demo_Auto_Test has been loaded successfully</msg>
<msg timestamp="20230421 17:13:11.595" level="INFO">connecting to device</msg>
<msg timestamp="20230421 17:13:11.612" level="INFO">COM Port COM1 created successfully</msg>
<msg timestamp="20230421 17:13:11.719" level="INFO">GX1 Simulator is started</msg>
<msg timestamp="20230421 17:13:14.251" level="INFO">Squish tester is started</msg>
<msg timestamp="20230421 17:13:14.251" level="INFO">found router: gx1.development.squish_server</msg>
<status status="PASS" starttime="20230421 17:13:11.445" endtime="20230421 17:13:14.252"/>
</kw>
<test id="s1-t1" name="TEST_CASE_1_COMMAND_SIMULATION" line="8">
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:13:14.256" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:13:14.255" endtime="20230421 17:13:14.256"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:15.261" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:13:14.257" endtime="20230421 17:13:15.262"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:13:15.266" endtime="20230421 17:13:16.416"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:16.931" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230421 17:13:16.420" endtime="20230421 17:13:16.932"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:13:17.449" level="INFO" html="true">&lt;a href="Img_a1670012-70ca-4405-a775-82439408fd19.png"&gt;&lt;img src="Img_a1670012-70ca-4405-a775-82439408fd19.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:13:16.936" endtime="20230421 17:13:17.449"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>426</arg>
<arg>718</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:13:17.450" endtime="20230421 17:13:18.569"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:28.590" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 17:13:18.573" endtime="20230421 17:13:28.591"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:28.617" level="INFO">The scenario ImpedanceRamp is started</msg>
<status status="PASS" starttime="20230421 17:13:28.594" endtime="20230421 17:13:28.618"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:28.639" level="INFO">started</msg>
<msg timestamp="20230421 17:13:28.642" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 17:13:28.620" endtime="20230421 17:13:28.644"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:38.665" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 17:13:28.649" endtime="20230421 17:13:38.666"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:38.671" level="INFO">stop</msg>
<msg timestamp="20230421 17:13:38.673" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 17:13:38.669" endtime="20230421 17:13:38.674"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:13:39.233" level="INFO" html="true">&lt;a href="Img_389a0e86-9296-4803-96be-14f6158dae78.png"&gt;&lt;img src="Img_389a0e86-9296-4803-96be-14f6158dae78.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:13:38.677" endtime="20230421 17:13:39.234"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:40.239" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:13:39.235" endtime="20230421 17:13:40.239"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:40.244" level="INFO">started</msg>
<msg timestamp="20230421 17:13:40.245" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 17:13:40.241" endtime="20230421 17:13:40.246"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:45.263" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:13:40.247" endtime="20230421 17:13:45.264"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:45.270" level="INFO">stop</msg>
<msg timestamp="20230421 17:13:45.270" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 17:13:45.268" endtime="20230421 17:13:45.272"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:13:45.279" level="INFO">The scenario ImpedanceRamp is stopped</msg>
<status status="PASS" starttime="20230421 17:13:45.275" endtime="20230421 17:13:45.282"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:50.304" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:13:45.287" endtime="20230421 17:13:50.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:13:50.312" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:13:50.309" endtime="20230421 17:13:50.312"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:13:50.731" level="INFO" html="true">&lt;a href="Img_c1d311b1-39d9-4ffc-8e90-af95ed82ae15.png"&gt;&lt;img src="Img_c1d311b1-39d9-4ffc-8e90-af95ed82ae15.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:13:50.314" endtime="20230421 17:13:50.731"/>
</kw>
<doc>This test case is for demo for the features of DVTFront of GX1.</doc>
<tag>DEMO</tag>
<tag>MAINPAGE</tag>
<tag>SCREENSHOT</tag>
<tag>stimulation</tag>
<status status="PASS" starttime="20230421 17:13:14.252" endtime="20230421 17:13:50.735"/>
</test>
<test id="s1-t2" name="TEST_CASE_2_CLICK_AND_SCREEN_SHOT" line="32">
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:13:50.758" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:13:50.756" endtime="20230421 17:13:50.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:51.773" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:13:50.760" endtime="20230421 17:13:51.773"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>OneTouch</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 17:13:51.774" endtime="20230421 17:13:51.848"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:56.857" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:13:51.849" endtime="20230421 17:13:56.859"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:13:57.315" level="INFO" html="true">&lt;a href="Img_115a9a89-9e81-4980-b22d-7342088b1fee.png"&gt;&lt;img src="Img_115a9a89-9e81-4980-b22d-7342088b1fee.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:13:56.863" endtime="20230421 17:13:57.315"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:13:58.330" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:13:57.318" endtime="20230421 17:13:58.333"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>Stimulation</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 17:13:58.337" endtime="20230421 17:13:59.607"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:00.613" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:13:59.608" endtime="20230421 17:14:00.614"/>
</kw>
<kw name="Set Command Response" library="GX1Testlib">
<arg>C046</arg>
<arg>u8_OutputStatus=1</arg>
<arg>u8_ButtonStatus=1</arg>
<doc>Set the response data
:param command_code: the command code not the response code
:param response_data: the leaf field of the response data
:return:</doc>
<status status="PASS" starttime="20230421 17:14:00.615" endtime="20230421 17:14:00.616"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:01.632" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:14:00.617" endtime="20230421 17:14:01.632"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:14:01.898" level="INFO" html="true">&lt;a href="Img_95d90a77-ecdf-444f-9980-0053b9b09e40.png"&gt;&lt;img src="Img_95d90a77-ecdf-444f-9980-0053b9b09e40.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:14:01.633" endtime="20230421 17:14:01.898"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:02.909" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:14:01.899" endtime="20230421 17:14:02.909"/>
</kw>
<kw name="Set Command Response" library="GX1Testlib">
<arg>C046</arg>
<arg>u8_OutputStatus=0</arg>
<arg>u8_ButtonStatus=1</arg>
<doc>Set the response data
:param command_code: the command code not the response code
:param response_data: the leaf field of the response data
:return:</doc>
<status status="PASS" starttime="20230421 17:14:02.911" endtime="20230421 17:14:02.912"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:03.926" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:14:02.914" endtime="20230421 17:14:03.928"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:14:04.107" level="INFO" html="true">&lt;a href="Img_b8d5b793-bbfe-40f3-ae4a-a6b8cebceb7b.png"&gt;&lt;img src="Img_b8d5b793-bbfe-40f3-ae4a-a6b8cebceb7b.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:14:03.930" endtime="20230421 17:14:04.107"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 17:14:04.109" endtime="20230421 17:14:04.585"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:14:04.877" level="INFO" html="true">&lt;a href="Img_76b8279c-c6dd-46a6-84a2-c088a6bd9645.png"&gt;&lt;img src="Img_76b8279c-c6dd-46a6-84a2-c088a6bd9645.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:14:04.587" endtime="20230421 17:14:04.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:14:04.881" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:14:04.879" endtime="20230421 17:14:04.881"/>
</kw>
<doc>This is the second case</doc>
<tag>POWER</tag>
<tag>VOLTAGE</tag>
<status status="PASS" starttime="20230421 17:13:50.752" endtime="20230421 17:14:04.882"/>
</test>
<test id="s1-t3" name="TEST_CASE_3_COMMAND_SEARCH" line="54">
<kw name="Log" library="BuiltIn">
<arg>this test is for testing the search command logged in the queue</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:14:04.892" level="INFO">this test is for testing the search command logged in the queue</msg>
<status status="PASS" starttime="20230421 17:14:04.892" endtime="20230421 17:14:04.892"/>
</kw>
<kw name="Clean Command Logging Queue" library="GX1Testlib">
<doc>Clean the queue
:return:</doc>
<status status="PASS" starttime="20230421 17:14:04.893" endtime="20230421 17:14:04.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:09.901" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:14:04.898" endtime="20230421 17:14:09.902"/>
</kw>
<kw name="Find Logged Commands" library="GX1Testlib">
<var>@{command_list}</var>
<arg>0xC049</arg>
<arg>0</arg>
<arg>ar_measured_channels[0].u8_TempRefAvailable=1</arg>
<doc>To find the command or response in the queue
:param command_code: the command code or response code
:param start_seq: from where to search forward
:param kwargs: the matching condition of the field value, key pairs
:return:</doc>
<msg timestamp="20230421 17:14:09.906" level="INFO">@{command_list} = [ &lt;BackPlaneSimulator.MessageWrapper object at 0x000001FA1A85DE50&gt; | &lt;BackPlaneSimulator.MessageWrapper object at 0x000001FA1A85DCA0&gt; | &lt;BackPlaneSimulator.MessageWrapper object at 0x000001FA1A865610&gt;...</msg>
<status status="PASS" starttime="20230421 17:14:09.903" endtime="20230421 17:14:09.906"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${message_count}</var>
<arg>${command_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230421 17:14:09.909" level="INFO">Length is 5</msg>
<msg timestamp="20230421 17:14:09.910" level="INFO">${message_count} = 5</msg>
<status status="PASS" starttime="20230421 17:14:09.906" endtime="20230421 17:14:09.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${command_list[0].data.ar_measured_channels[0].u16_TempRef}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:14:09.914" level="INFO">12</msg>
<status status="PASS" starttime="20230421 17:14:09.912" endtime="20230421 17:14:09.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${command_list[1].data.ar_measured_channels[0].u16_TempRef}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:14:09.917" level="INFO">12</msg>
<status status="PASS" starttime="20230421 17:14:09.915" endtime="20230421 17:14:09.918"/>
</kw>
<tag>STIMULATION</tag>
<tag>VOLTAGE</tag>
<status status="PASS" starttime="20230421 17:14:04.887" endtime="20230421 17:14:09.919"/>
</test>
<test id="s1-t4" name="TEST_CASE_4_TEST_OCR" line="64">
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:14:09.926" endtime="20230421 17:14:10.296"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>109</arg>
<arg>722</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:14:10.298" endtime="20230421 17:14:10.693"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1S</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:11.709" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:14:10.695" endtime="20230421 17:14:11.710"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${screen_shot_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:14:11.892" level="INFO" html="true">&lt;a href="Img_b392f70a-2ebb-4cbe-84f4-f5c8762e7384.png"&gt;&lt;img src="Img_b392f70a-2ebb-4cbe-84f4-f5c8762e7384.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:11.893" level="INFO">${screen_shot_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\Img_b392f70a-2ebb-4cbe-84f4-f5c8762e7384.png</msg>
<status status="PASS" starttime="20230421 17:14:11.712" endtime="20230421 17:14:11.893"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text1}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Monopolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 17:14:12.177" level="INFO" html="true">&lt;a href="Img_5b5f7c08-7944-4750-8855-1c79067253e1.png"&gt;&lt;img src="Img_5b5f7c08-7944-4750-8855-1c79067253e1.png" width="118"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:12.178" level="INFO">${text1} = Monopolar</msg>
<status status="PASS" starttime="20230421 17:14:11.895" endtime="20230421 17:14:12.178"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text2}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Bipolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 17:14:12.388" level="INFO" html="true">&lt;a href="Img_723addae-f5c2-434a-9685-204fb5aea5ac.png"&gt;&lt;img src="Img_723addae-f5c2-434a-9685-204fb5aea5ac.png" width="95"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:12.388" level="INFO">${text2} = Bipolar</msg>
<status status="PASS" starttime="20230421 17:14:12.179" endtime="20230421 17:14:12.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text1}</arg>
<arg>Monopolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 17:14:12.389" endtime="20230421 17:14:12.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text2}</arg>
<arg>Bipolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 17:14:12.392" endtime="20230421 17:14:12.392"/>
</kw>
<status status="PASS" starttime="20230421 17:14:09.923" endtime="20230421 17:14:12.394"/>
</test>
<test id="s1-t5" name="TEST_CASE_5_TEST_COMPARE" line="74">
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 17:14:12.403" endtime="20230421 17:14:12.795"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:14:13.799" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:14:12.798" endtime="20230421 17:14:13.799"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${image_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:14:13.947" level="INFO" html="true">&lt;a href="Img_3aa65f73-156a-454d-85ff-bb7dc2f43972.png"&gt;&lt;img src="Img_3aa65f73-156a-454d-85ff-bb7dc2f43972.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:13.948" level="INFO">${image_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\Img_3aa65f73-156a-454d-85ff-bb7dc2f43972.png</msg>
<status status="PASS" starttime="20230421 17:14:13.801" endtime="20230421 17:14:13.948"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Camera</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:14:13.999" level="INFO" html="true">&lt;a href="Img_4e9c6812-54b2-4084-a976-0e7d8fd7f4e9.png"&gt;&lt;img src="Img_4e9c6812-54b2-4084-a976-0e7d8fd7f4e9.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.000" level="INFO" html="true">&lt;a href="Img_8b2d10f0-85a3-410d-ac20-5180bbc0bbf3.png"&gt;&lt;img src="Img_8b2d10f0-85a3-410d-ac20-5180bbc0bbf3.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.044" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:14:13.949" endtime="20230421 17:14:14.044"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Folder</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:14:14.081" level="INFO" html="true">&lt;a href="Img_324a4e7d-00dc-405f-9f7b-35108d6134c9.png"&gt;&lt;img src="Img_324a4e7d-00dc-405f-9f7b-35108d6134c9.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.083" level="INFO" html="true">&lt;a href="Img_ba4b2c87-8c78-4dcd-aec7-84394fbad260.png"&gt;&lt;img src="Img_ba4b2c87-8c78-4dcd-aec7-84394fbad260.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.125" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:14:14.046" endtime="20230421 17:14:14.126"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Setting</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:14:14.164" level="INFO" html="true">&lt;a href="Img_b1ed444a-f557-4848-8248-54310465fc1a.png"&gt;&lt;img src="Img_b1ed444a-f557-4848-8248-54310465fc1a.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.165" level="INFO" html="true">&lt;a href="Img_59bc61a1-42c3-4751-995b-a391b441d851.png"&gt;&lt;img src="Img_59bc61a1-42c3-4751-995b-a391b441d851.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:14:14.199" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:14:14.127" endtime="20230421 17:14:14.199"/>
</kw>
<status status="PASS" starttime="20230421 17:14:12.397" endtime="20230421 17:14:14.200"/>
</test>
<kw name="Close Test" library="GX1Testlib" type="TEARDOWN">
<doc>Description:
Close all and cleanup after the test is done
exceptions.
Arguments:
    None
Return Value:
    None
Examples:
|close_test |</doc>
<msg timestamp="20230421 17:14:14.260" level="INFO">disconnecting from device</msg>
<msg timestamp="20230421 17:14:14.269" level="INFO">GX1 Simulator is stopped</msg>
<msg timestamp="20230421 17:14:14.301" level="INFO">Squish tester is stopped</msg>
<status status="PASS" starttime="20230421 17:14:14.204" endtime="20230421 17:14:14.302"/>
</kw>
<meta name="FW_VERSION">2.0</meta>
<meta name="SW_VERSION">1.0</meta>
<status status="PASS" starttime="20230421 17:13:10.811" endtime="20230421 17:14:14.302"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DEMO</stat>
<stat pass="1" fail="0" skip="0">MAINPAGE</stat>
<stat pass="1" fail="0" skip="0">POWER</stat>
<stat pass="1" fail="0" skip="0">SCREENSHOT</stat>
<stat pass="2" fail="0" skip="0">stimulation</stat>
<stat pass="2" fail="0" skip="0">VOLTAGE</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="TEST DEMO">TEST DEMO</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
