<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.0 on win32)" generated="20230420 14:10:39.976" rpa="false" schemaversion="3">
<suite id="s1" name="TEST DEMO" source="D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\TEST_DEMO.robot">
<kw name="Init Test" library="GX1Testlib" type="SETUP">
<doc>Description:
 This should be called before any test can started for GX1
Arguments:</doc>
<msg timestamp="20230420 14:10:40.214" level="INFO">Loading the project at D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test</msg>
<msg timestamp="20230420 14:10:40.234" level="INFO">Squish Hook 192.168.80.130, gx1, C:\Users\xuf\.ssh\bsci</msg>
<msg timestamp="20230420 14:10:40.234" level="INFO">Demo_Auto_Test has been loaded successfully</msg>
<msg timestamp="20230420 14:10:40.252" level="INFO">connecting to device</msg>
<msg timestamp="20230420 14:10:40.257" level="INFO">COM Port COM1 created successfully</msg>
<msg timestamp="20230420 14:10:40.365" level="INFO">GX1 Simulator is started</msg>
<msg timestamp="20230420 14:10:42.792" level="INFO">Squish tester is started</msg>
<msg timestamp="20230420 14:10:42.792" level="INFO">found router: gx1.development.squish_server</msg>
<status status="PASS" starttime="20230420 14:10:40.213" endtime="20230420 14:10:42.792"/>
</kw>
<test id="s1-t1" name="TEST_CASE_4_TEST_OCR" line="64">
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230420 14:10:42.794" endtime="20230420 14:10:43.274"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>109</arg>
<arg>722</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230420 14:10:43.275" endtime="20230420 14:10:43.690"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1S</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230420 14:10:44.691" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230420 14:10:43.690" endtime="20230420 14:10:44.692"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${screen_shot_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230420 14:10:44.816" level="INFO" html="true">&lt;a href="Img_c9215937-ca0a-4e96-bccf-ea28990a1a18.png"&gt;&lt;img src="Img_c9215937-ca0a-4e96-bccf-ea28990a1a18.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:44.816" level="INFO">${screen_shot_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_c9215937-ca0a-4e96-bccf-ea28990a1a18.png</msg>
<status status="PASS" starttime="20230420 14:10:44.693" endtime="20230420 14:10:44.817"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text1}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Monopolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230420 14:10:44.972" level="INFO" html="true">&lt;a href="Img_d5edce36-6350-4c59-99db-3169f119b137.png"&gt;&lt;img src="Img_d5edce36-6350-4c59-99db-3169f119b137.png" width="118"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:44.973" level="INFO">${text1} = Monopolar</msg>
<status status="PASS" starttime="20230420 14:10:44.817" endtime="20230420 14:10:44.973"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text2}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Bipolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230420 14:10:45.107" level="INFO" html="true">&lt;a href="Img_253612b6-cd28-4b82-8710-9d5651c0e85d.png"&gt;&lt;img src="Img_253612b6-cd28-4b82-8710-9d5651c0e85d.png" width="95"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:45.108" level="INFO">${text2} = Bipolar</msg>
<status status="PASS" starttime="20230420 14:10:44.973" endtime="20230420 14:10:45.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text1}</arg>
<arg>Monopolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230420 14:10:45.108" endtime="20230420 14:10:45.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text2}</arg>
<arg>Bipolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230420 14:10:45.109" endtime="20230420 14:10:45.109"/>
</kw>
<status status="PASS" starttime="20230420 14:10:42.792" endtime="20230420 14:10:45.109"/>
</test>
<test id="s1-t2" name="TEST_CASE_5_TEST_COMPARE" line="74">
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230420 14:10:45.111" endtime="20230420 14:10:45.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230420 14:10:46.570" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230420 14:10:45.564" endtime="20230420 14:10:46.570"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${image_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230420 14:10:46.695" level="INFO" html="true">&lt;a href="Img_b4e2e2fb-766f-46ff-85c8-e564064c5a3f.png"&gt;&lt;img src="Img_b4e2e2fb-766f-46ff-85c8-e564064c5a3f.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.695" level="INFO">${image_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_b4e2e2fb-766f-46ff-85c8-e564064c5a3f.png</msg>
<status status="PASS" starttime="20230420 14:10:46.571" endtime="20230420 14:10:46.695"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Camera</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230420 14:10:46.716" level="INFO" html="true">&lt;a href="Img_0b0cb810-1cb0-47ef-b751-24a220bbf8eb.png"&gt;&lt;img src="Img_0b0cb810-1cb0-47ef-b751-24a220bbf8eb.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.717" level="INFO" html="true">&lt;a href="Img_7119ca8a-bef0-459f-858b-c1d94ca2f442.png"&gt;&lt;img src="Img_7119ca8a-bef0-459f-858b-c1d94ca2f442.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.735" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230420 14:10:46.696" endtime="20230420 14:10:46.735"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Folder</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230420 14:10:46.752" level="INFO" html="true">&lt;a href="Img_4dacae95-ba23-4048-a9c8-74987553d1bb.png"&gt;&lt;img src="Img_4dacae95-ba23-4048-a9c8-74987553d1bb.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.752" level="INFO" html="true">&lt;a href="Img_4a5532cc-c641-4cf4-8c24-ceec8e33d56a.png"&gt;&lt;img src="Img_4a5532cc-c641-4cf4-8c24-ceec8e33d56a.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.771" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230420 14:10:46.736" endtime="20230420 14:10:46.771"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Setting</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230420 14:10:46.790" level="INFO" html="true">&lt;a href="Img_ca57a70a-35b9-4e8b-9483-f63205726462.png"&gt;&lt;img src="Img_ca57a70a-35b9-4e8b-9483-f63205726462.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.790" level="INFO" html="true">&lt;a href="Img_a960afbf-15b0-4a7d-b708-bf082befbe6c.png"&gt;&lt;img src="Img_a960afbf-15b0-4a7d-b708-bf082befbe6c.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230420 14:10:46.809" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230420 14:10:46.771" endtime="20230420 14:10:46.810"/>
</kw>
<status status="PASS" starttime="20230420 14:10:45.110" endtime="20230420 14:10:46.810"/>
</test>
<kw name="Close Test" library="GX1Testlib" type="TEARDOWN">
<doc>Description:
Close all and cleanup after the test is done
exceptions.
Arguments:
    None
Return Value:
    None
Examples:
|close_test |</doc>
<msg timestamp="20230420 14:10:46.873" level="INFO">disconnecting from device</msg>
<msg timestamp="20230420 14:10:46.882" level="INFO">GX1 Simulator is stopped</msg>
<msg timestamp="20230420 14:10:46.912" level="INFO">Squish tester is stopped</msg>
<status status="PASS" starttime="20230420 14:10:46.811" endtime="20230420 14:10:46.913"/>
</kw>
<meta name="FW_VERSION">2.0</meta>
<meta name="SW_VERSION">1.0</meta>
<status status="PASS" starttime="20230420 14:10:39.992" endtime="20230420 14:10:46.913"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="TEST DEMO">TEST DEMO</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
