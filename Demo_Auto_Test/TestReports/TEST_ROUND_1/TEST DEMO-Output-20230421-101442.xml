<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.0 on win32)" generated="20230421 10:14:42.372" rpa="false" schemaversion="3">
<suite id="s1" name="TEST DEMO" source="D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\TEST_DEMO.robot">
<kw name="Init Test" library="GX1Testlib" type="SETUP">
<doc>Description:
 This should be called before any test can started for GX1
Arguments:</doc>
<msg timestamp="20230421 10:14:42.608" level="INFO">Loading the project at D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test</msg>
<msg timestamp="20230421 10:14:42.631" level="INFO">Squish Hook 192.168.80.130, gx1, C:\Users\xuf\.ssh\bsci</msg>
<msg timestamp="20230421 10:14:42.631" level="INFO">Demo_Auto_Test has been loaded successfully</msg>
<msg timestamp="20230421 10:14:42.648" level="INFO">connecting to device</msg>
<msg timestamp="20230421 10:14:42.658" level="INFO">COM Port COM1 created successfully</msg>
<msg timestamp="20230421 10:14:42.767" level="INFO">GX1 Simulator is started</msg>
<msg timestamp="20230421 10:14:45.004" level="INFO">Squish tester is started</msg>
<msg timestamp="20230421 10:14:45.004" level="INFO">found router: gx1.development.squish_server</msg>
<status status="PASS" starttime="20230421 10:14:42.607" endtime="20230421 10:14:45.004"/>
</kw>
<test id="s1-t1" name="TEST_CASE_1_COMMAND_SIMULATION" line="8">
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:14:45.016" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 10:14:45.016" endtime="20230421 10:14:45.016"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:14:46.029" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:14:45.016" endtime="20230421 10:14:46.030"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 10:14:46.031" endtime="20230421 10:14:46.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:14:46.975" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230421 10:14:46.460" endtime="20230421 10:14:46.975"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:14:47.077" level="INFO" html="true">&lt;a href="Img_1ad4853f-1b68-488b-b2c7-724ab8a5715d.png"&gt;&lt;img src="Img_1ad4853f-1b68-488b-b2c7-724ab8a5715d.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:14:46.975" endtime="20230421 10:14:47.077"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>426</arg>
<arg>718</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 10:14:47.078" endtime="20230421 10:14:47.539"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:14:57.554" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 10:14:47.539" endtime="20230421 10:14:57.554"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:14:57.557" level="INFO">The scenario ImpedanceRamp is started</msg>
<status status="PASS" starttime="20230421 10:14:57.555" endtime="20230421 10:14:57.557"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:14:57.560" level="INFO">started</msg>
<msg timestamp="20230421 10:14:57.560" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 10:14:57.558" endtime="20230421 10:14:57.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:07.570" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 10:14:57.561" endtime="20230421 10:15:07.570"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:15:07.571" level="INFO">stop</msg>
<msg timestamp="20230421 10:15:07.571" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 10:15:07.570" endtime="20230421 10:15:07.571"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:07.711" level="INFO" html="true">&lt;a href="Img_6d1abf6c-7824-4569-ba56-2122a7accafd.png"&gt;&lt;img src="Img_6d1abf6c-7824-4569-ba56-2122a7accafd.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:07.571" endtime="20230421 10:15:07.712"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:08.726" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:07.712" endtime="20230421 10:15:08.726"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:15:08.728" level="INFO">started</msg>
<msg timestamp="20230421 10:15:08.728" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 10:15:08.726" endtime="20230421 10:15:08.728"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:13.730" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 10:15:08.728" endtime="20230421 10:15:13.730"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:15:13.731" level="INFO">stop</msg>
<msg timestamp="20230421 10:15:13.731" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 10:15:13.730" endtime="20230421 10:15:13.731"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 10:15:13.731" level="INFO">The scenario ImpedanceRamp is stopped</msg>
<status status="PASS" starttime="20230421 10:15:13.731" endtime="20230421 10:15:13.731"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:18.737" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 10:15:13.732" endtime="20230421 10:15:18.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:18.739" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 10:15:18.738" endtime="20230421 10:15:18.739"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:18.852" level="INFO" html="true">&lt;a href="Img_c80f92e8-b144-4101-a455-725fb442a524.png"&gt;&lt;img src="Img_c80f92e8-b144-4101-a455-725fb442a524.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:18.739" endtime="20230421 10:15:18.852"/>
</kw>
<doc>This test case is for demo for the features of DVTFront of GX1.</doc>
<tag>DEMO</tag>
<tag>MAINPAGE</tag>
<tag>SCREENSHOT</tag>
<tag>stimulation</tag>
<status status="PASS" starttime="20230421 10:14:45.005" endtime="20230421 10:15:18.852"/>
</test>
<test id="s1-t2" name="TEST_CASE_2_CLICK_AND_SCREEN_SHOT" line="32">
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:18.855" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 10:15:18.855" endtime="20230421 10:15:18.855"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:19.868" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:18.855" endtime="20230421 10:15:19.868"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>OneTouch</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 10:15:19.869" endtime="20230421 10:15:19.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:24.886" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 10:15:19.885" endtime="20230421 10:15:24.886"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:24.997" level="INFO" html="true">&lt;a href="Img_361c3c86-8fc5-4240-acc1-360b62e02cb7.png"&gt;&lt;img src="Img_361c3c86-8fc5-4240-acc1-360b62e02cb7.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:24.887" endtime="20230421 10:15:24.997"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:26.000" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:24.997" endtime="20230421 10:15:26.000"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>Stimulation</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 10:15:26.000" endtime="20230421 10:15:26.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:27.445" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:26.442" endtime="20230421 10:15:27.445"/>
</kw>
<kw name="Set Command Response" library="GX1Testlib">
<arg>C046</arg>
<arg>u8_OutputStatus=1</arg>
<arg>u8_ButtonStatus=1</arg>
<doc>Set the response data
:param command_code: the command code not the response code
:param response_data: the leaf field of the response data
:return:</doc>
<status status="PASS" starttime="20230421 10:15:27.445" endtime="20230421 10:15:27.446"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:28.451" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:27.446" endtime="20230421 10:15:28.451"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:28.560" level="INFO" html="true">&lt;a href="Img_f11288e2-8af2-4ece-a4ca-8fc170e5a198.png"&gt;&lt;img src="Img_f11288e2-8af2-4ece-a4ca-8fc170e5a198.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:28.451" endtime="20230421 10:15:28.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:29.574" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:28.560" endtime="20230421 10:15:29.575"/>
</kw>
<kw name="Set Command Response" library="GX1Testlib">
<arg>C046</arg>
<arg>u8_OutputStatus=0</arg>
<arg>u8_ButtonStatus=1</arg>
<doc>Set the response data
:param command_code: the command code not the response code
:param response_data: the leaf field of the response data
:return:</doc>
<status status="PASS" starttime="20230421 10:15:29.575" endtime="20230421 10:15:29.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:30.591" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:29.576" endtime="20230421 10:15:30.591"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:30.704" level="INFO" html="true">&lt;a href="Img_3c30c4bf-49cd-4bc7-8f9c-4baf44d040bd.png"&gt;&lt;img src="Img_3c30c4bf-49cd-4bc7-8f9c-4baf44d040bd.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:30.592" endtime="20230421 10:15:30.704"/>
</kw>
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 10:15:30.704" endtime="20230421 10:15:31.096"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:31.241" level="INFO" html="true">&lt;a href="Img_add1213e-f561-432b-a2de-4238834783bf.png"&gt;&lt;img src="Img_add1213e-f561-432b-a2de-4238834783bf.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 10:15:31.096" endtime="20230421 10:15:31.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:31.242" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 10:15:31.241" endtime="20230421 10:15:31.242"/>
</kw>
<doc>This is the second case</doc>
<tag>POWER</tag>
<tag>VOLTAGE</tag>
<status status="PASS" starttime="20230421 10:15:18.854" endtime="20230421 10:15:31.242"/>
</test>
<test id="s1-t3" name="TEST_CASE_3_COMMAND_SEARCH" line="54">
<kw name="Log" library="BuiltIn">
<arg>this test is for testing the search command logged in the queue</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:31.246" level="INFO">this test is for testing the search command logged in the queue</msg>
<status status="PASS" starttime="20230421 10:15:31.246" endtime="20230421 10:15:31.247"/>
</kw>
<kw name="Clean Command Logging Queue" library="GX1Testlib">
<doc>Clean the queue
:return:</doc>
<status status="PASS" starttime="20230421 10:15:31.247" endtime="20230421 10:15:31.247"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:36.255" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 10:15:31.247" endtime="20230421 10:15:36.255"/>
</kw>
<kw name="Find Logged Commands" library="GX1Testlib">
<var>@{command_list}</var>
<arg>0xC049</arg>
<arg>0</arg>
<arg>ar_measured_channels[0].u8_TempRefAvailable=1</arg>
<doc>To find the command or response in the queue
:param command_code: the command code or response code
:param start_seq: from where to search forward
:param kwargs: the matching condition of the field value, key pairs
:return:</doc>
<msg timestamp="20230421 10:15:36.256" level="INFO">@{command_list} = [ &lt;BackPlaneSimulator.MessageWrapper object at 0x000001F0FC8B2670&gt; | &lt;BackPlaneSimulator.MessageWrapper object at 0x000001F0FC8B2850&gt; | &lt;BackPlaneSimulator.MessageWrapper object at 0x000001F0FC8B2AC0&gt;...</msg>
<status status="PASS" starttime="20230421 10:15:36.255" endtime="20230421 10:15:36.256"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${message_count}</var>
<arg>${command_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230421 10:15:36.258" level="INFO">Length is 5</msg>
<msg timestamp="20230421 10:15:36.258" level="INFO">${message_count} = 5</msg>
<status status="PASS" starttime="20230421 10:15:36.256" endtime="20230421 10:15:36.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${command_list[0].data.ar_measured_channels[0].u16_TempRef}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:36.259" level="INFO">12</msg>
<status status="PASS" starttime="20230421 10:15:36.258" endtime="20230421 10:15:36.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${command_list[1].data.ar_measured_channels[0].u16_TempRef}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 10:15:36.260" level="INFO">12</msg>
<status status="PASS" starttime="20230421 10:15:36.259" endtime="20230421 10:15:36.260"/>
</kw>
<tag>STIMULATION</tag>
<tag>VOLTAGE</tag>
<status status="PASS" starttime="20230421 10:15:31.245" endtime="20230421 10:15:36.260"/>
</test>
<test id="s1-t4" name="TEST_CASE_4_TEST_OCR" line="64">
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 10:15:36.261" endtime="20230421 10:15:36.587"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>109</arg>
<arg>722</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 10:15:36.588" endtime="20230421 10:15:36.929"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1S</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:37.931" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:36.930" endtime="20230421 10:15:37.931"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${screen_shot_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:38.047" level="INFO" html="true">&lt;a href="Img_addbdeec-b727-4b73-aca7-d629cf122b8d.png"&gt;&lt;img src="Img_addbdeec-b727-4b73-aca7-d629cf122b8d.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:38.048" level="INFO">${screen_shot_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_addbdeec-b727-4b73-aca7-d629cf122b8d.png</msg>
<status status="PASS" starttime="20230421 10:15:37.931" endtime="20230421 10:15:38.048"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text1}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Monopolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 10:15:38.437" level="INFO" html="true">&lt;a href="Img_7adc5092-744e-48b4-80c7-5bbeb5892367.png"&gt;&lt;img src="Img_7adc5092-744e-48b4-80c7-5bbeb5892367.png" width="118"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:38.437" level="INFO">${text1} = Monopolar</msg>
<status status="PASS" starttime="20230421 10:15:38.048" endtime="20230421 10:15:38.437"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text2}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Bipolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 10:15:38.571" level="INFO" html="true">&lt;a href="Img_ae58a675-ecc5-4063-b94b-4757a5396a4e.png"&gt;&lt;img src="Img_ae58a675-ecc5-4063-b94b-4757a5396a4e.png" width="95"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:38.572" level="INFO">${text2} = Bipolar</msg>
<status status="PASS" starttime="20230421 10:15:38.438" endtime="20230421 10:15:38.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text1}</arg>
<arg>Monopolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 10:15:38.572" endtime="20230421 10:15:38.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text2}</arg>
<arg>Bipolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 10:15:38.573" endtime="20230421 10:15:38.573"/>
</kw>
<status status="PASS" starttime="20230421 10:15:36.261" endtime="20230421 10:15:38.574"/>
</test>
<test id="s1-t5" name="TEST_CASE_5_TEST_COMPARE" line="74">
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 10:15:38.575" endtime="20230421 10:15:38.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 10:15:39.913" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 10:15:38.910" endtime="20230421 10:15:39.913"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${image_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 10:15:40.007" level="INFO" html="true">&lt;a href="Img_b4f62e32-212d-403a-b08a-8ebdbc4d091f.png"&gt;&lt;img src="Img_b4f62e32-212d-403a-b08a-8ebdbc4d091f.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.007" level="INFO">${image_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_b4f62e32-212d-403a-b08a-8ebdbc4d091f.png</msg>
<status status="PASS" starttime="20230421 10:15:39.914" endtime="20230421 10:15:40.007"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Camera</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 10:15:40.037" level="INFO" html="true">&lt;a href="Img_4ece3b49-e8bc-4639-9abc-980fc9980178.png"&gt;&lt;img src="Img_4ece3b49-e8bc-4639-9abc-980fc9980178.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.038" level="INFO" html="true">&lt;a href="Img_f8aa74e5-3368-4d83-a4f6-890b164190e0.png"&gt;&lt;img src="Img_f8aa74e5-3368-4d83-a4f6-890b164190e0.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.057" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 10:15:40.007" endtime="20230421 10:15:40.057"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Folder</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 10:15:40.073" level="INFO" html="true">&lt;a href="Img_6add1512-6196-4f7c-a9c9-3f26eba0ab40.png"&gt;&lt;img src="Img_6add1512-6196-4f7c-a9c9-3f26eba0ab40.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.074" level="INFO" html="true">&lt;a href="Img_6b88ad23-1c8f-47bd-a947-8f3caf7a7fbe.png"&gt;&lt;img src="Img_6b88ad23-1c8f-47bd-a947-8f3caf7a7fbe.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.092" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 10:15:40.058" endtime="20230421 10:15:40.092"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Setting</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 10:15:40.110" level="INFO" html="true">&lt;a href="Img_d5cb00de-746b-47c8-9814-ff10c2342391.png"&gt;&lt;img src="Img_d5cb00de-746b-47c8-9814-ff10c2342391.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.111" level="INFO" html="true">&lt;a href="Img_da079c80-fe0e-4496-8780-c57169485f48.png"&gt;&lt;img src="Img_da079c80-fe0e-4496-8780-c57169485f48.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 10:15:40.129" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 10:15:40.092" endtime="20230421 10:15:40.130"/>
</kw>
<status status="PASS" starttime="20230421 10:15:38.575" endtime="20230421 10:15:40.130"/>
</test>
<kw name="Close Test" library="GX1Testlib" type="TEARDOWN">
<doc>Description:
Close all and cleanup after the test is done
exceptions.
Arguments:
    None
Return Value:
    None
Examples:
|close_test |</doc>
<msg timestamp="20230421 10:15:40.146" level="INFO">disconnecting from device</msg>
<msg timestamp="20230421 10:15:40.155" level="INFO">GX1 Simulator is stopped</msg>
<msg timestamp="20230421 10:15:40.185" level="INFO">Squish tester is stopped</msg>
<status status="PASS" starttime="20230421 10:15:40.132" endtime="20230421 10:15:40.186"/>
</kw>
<meta name="FW_VERSION">2.0</meta>
<meta name="SW_VERSION">1.0</meta>
<status status="PASS" starttime="20230421 10:14:42.387" endtime="20230421 10:15:40.186"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DEMO</stat>
<stat pass="1" fail="0" skip="0">MAINPAGE</stat>
<stat pass="1" fail="0" skip="0">POWER</stat>
<stat pass="1" fail="0" skip="0">SCREENSHOT</stat>
<stat pass="2" fail="0" skip="0">stimulation</stat>
<stat pass="2" fail="0" skip="0">VOLTAGE</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="TEST DEMO">TEST DEMO</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
