<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.0 on win32)" generated="20230421 17:01:31.948" rpa="false" schemaversion="3">
<suite id="s1" name="TEST DEMO" source="D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestProtocols\TEST_DEMO.robot">
<kw name="Init Test" library="GX1Testlib" type="SETUP">
<doc>Description:
 This should be called before any test can started for GX1
Arguments:</doc>
<msg timestamp="20230421 17:01:32.291" level="INFO">Loading the project at D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test</msg>
<msg timestamp="20230421 17:01:32.317" level="INFO">Squish Hook 192.168.80.130, gx1, C:\Users\xuf\.ssh\bsci</msg>
<msg timestamp="20230421 17:01:32.317" level="INFO">Demo_Auto_Test has been loaded successfully</msg>
<msg timestamp="20230421 17:01:32.343" level="INFO">connecting to device</msg>
<msg timestamp="20230421 17:01:32.345" level="INFO">COM Port COM1 created successfully</msg>
<msg timestamp="20230421 17:01:32.451" level="INFO">GX1 Simulator is started</msg>
<msg timestamp="20230421 17:01:35.099" level="INFO">Squish tester is started</msg>
<msg timestamp="20230421 17:01:35.099" level="INFO">found router: gx1.development.squish_server</msg>
<status status="PASS" starttime="20230421 17:01:32.290" endtime="20230421 17:01:35.100"/>
</kw>
<test id="s1-t1" name="TEST_CASE_1_COMMAND_SIMULATION" line="8">
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:01:35.102" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:01:35.102" endtime="20230421 17:01:35.103"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:01:36.113" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:01:35.103" endtime="20230421 17:01:36.114"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:01:36.114" endtime="20230421 17:01:36.696"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:01:37.202" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230421 17:01:36.696" endtime="20230421 17:01:37.202"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:01:37.365" level="INFO" html="true">&lt;a href="Img_4be1ed8e-e14e-409b-a155-cc7c4edb04c7.png"&gt;&lt;img src="Img_4be1ed8e-e14e-409b-a155-cc7c4edb04c7.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:01:37.203" endtime="20230421 17:01:37.365"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>426</arg>
<arg>718</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:01:37.366" endtime="20230421 17:01:37.904"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:01:47.911" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 17:01:37.905" endtime="20230421 17:01:47.912"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:01:47.948" level="INFO">The scenario ImpedanceRamp is started</msg>
<status status="PASS" starttime="20230421 17:01:47.912" endtime="20230421 17:01:47.949"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:01:47.951" level="INFO">started</msg>
<msg timestamp="20230421 17:01:47.951" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 17:01:47.949" endtime="20230421 17:01:47.951"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:01:57.963" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20230421 17:01:47.951" endtime="20230421 17:01:57.964"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:01:57.965" level="INFO">stop</msg>
<msg timestamp="20230421 17:01:57.965" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 17:01:57.964" endtime="20230421 17:01:57.965"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:01:58.171" level="INFO" html="true">&lt;a href="Img_ff21f71d-f466-446d-b1b3-2e3b14f210dd.png"&gt;&lt;img src="Img_ff21f71d-f466-446d-b1b3-2e3b14f210dd.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:01:57.966" endtime="20230421 17:01:58.171"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:01:59.182" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:01:58.172" endtime="20230421 17:01:59.183"/>
</kw>
<kw name="Start Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Start the stimulation scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:01:59.185" level="INFO">started</msg>
<msg timestamp="20230421 17:01:59.186" level="INFO">The scenario RampMeasure is started</msg>
<status status="PASS" starttime="20230421 17:01:59.183" endtime="20230421 17:01:59.186"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:02:04.194" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:01:59.186" endtime="20230421 17:02:04.196"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>RampMeasure</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:02:04.200" level="INFO">stop</msg>
<msg timestamp="20230421 17:02:04.200" level="INFO">The scenario RampMeasure is stopped</msg>
<status status="PASS" starttime="20230421 17:02:04.198" endtime="20230421 17:02:04.201"/>
</kw>
<kw name="Stop Scenario" library="GX1Testlib">
<arg>ImpedanceRamp</arg>
<doc>Stop the scenario by its alias
:param scenario_name:
:return:</doc>
<msg timestamp="20230421 17:02:04.203" level="INFO">The scenario ImpedanceRamp is stopped</msg>
<status status="PASS" starttime="20230421 17:02:04.202" endtime="20230421 17:02:04.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:02:09.212" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230421 17:02:04.205" endtime="20230421 17:02:09.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>this is the test demo, started</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230421 17:02:09.213" level="INFO">this is the test demo, started</msg>
<status status="PASS" starttime="20230421 17:02:09.213" endtime="20230421 17:02:09.213"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:02:09.407" level="INFO" html="true">&lt;a href="Img_4d4e94a3-abe7-41c0-b442-76b83ad62acd.png"&gt;&lt;img src="Img_4d4e94a3-abe7-41c0-b442-76b83ad62acd.png" width="400"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230421 17:02:09.214" endtime="20230421 17:02:09.407"/>
</kw>
<doc>This test case is for demo for the features of DVTFront of GX1.</doc>
<tag>DEMO</tag>
<tag>MAINPAGE</tag>
<tag>SCREENSHOT</tag>
<tag>stimulation</tag>
<status status="PASS" starttime="20230421 17:01:35.101" endtime="20230421 17:02:09.408"/>
</test>
<test id="s1-t2" name="TEST_CASE_4_TEST_OCR" line="64">
<kw name="Mouse Xy" library="GX1Testlib">
<arg>722</arg>
<arg>161</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:02:09.411" endtime="20230421 17:02:09.836"/>
</kw>
<kw name="Mouse Xy" library="GX1Testlib">
<arg>109</arg>
<arg>722</arg>
<doc>Perform a mouse click on the active window.</doc>
<status status="PASS" starttime="20230421 17:02:09.837" endtime="20230421 17:02:10.227"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1S</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:02:11.239" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:02:10.228" endtime="20230421 17:02:11.239"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${screen_shot_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:02:11.379" level="INFO" html="true">&lt;a href="Img_9ccf5d89-49e4-4f13-b9f9-7368efb1ab8e.png"&gt;&lt;img src="Img_9ccf5d89-49e4-4f13-b9f9-7368efb1ab8e.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:11.379" level="INFO">${screen_shot_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_9ccf5d89-49e4-4f13-b9f9-7368efb1ab8e.png</msg>
<status status="PASS" starttime="20230421 17:02:11.240" endtime="20230421 17:02:11.380"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text1}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Monopolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 17:02:11.611" level="INFO" html="true">&lt;a href="Img_6f7b7c46-e6ab-4239-bfa0-0134a39b523e.png"&gt;&lt;img src="Img_6f7b7c46-e6ab-4239-bfa0-0134a39b523e.png" width="118"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:11.612" level="INFO">${text1} = Monopolar</msg>
<status status="PASS" starttime="20230421 17:02:11.381" endtime="20230421 17:02:11.612"/>
</kw>
<kw name="Get Text" library="GX1Testlib">
<var>${text2}</var>
<arg>${screen_shot_path}</arg>
<arg>ElectrodeSetup</arg>
<arg>Bipolar</arg>
<doc>Get the text from the image and the feature rect
:param screenshot_path: the image path that need to be verified.
:param image_alias: the alias of the sample image
:param rect_alias: the alias of the sample feature rect
:param lang: the language of the text
:return: the text</doc>
<msg timestamp="20230421 17:02:11.790" level="INFO" html="true">&lt;a href="Img_eac12394-7c7d-4dde-87d4-bdc9d92b5bf3.png"&gt;&lt;img src="Img_eac12394-7c7d-4dde-87d4-bdc9d92b5bf3.png" width="95"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:11.790" level="INFO">${text2} = Bipolar</msg>
<status status="PASS" starttime="20230421 17:02:11.612" endtime="20230421 17:02:11.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text1}</arg>
<arg>Monopolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 17:02:11.791" endtime="20230421 17:02:11.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text2}</arg>
<arg>Bipolar</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230421 17:02:11.791" endtime="20230421 17:02:11.792"/>
</kw>
<status status="PASS" starttime="20230421 17:02:09.410" endtime="20230421 17:02:11.793"/>
</test>
<test id="s1-t3" name="TEST_CASE_5_TEST_COMPARE" line="74">
<kw name="Mouse Click" library="GX1Testlib">
<arg>PulseRF</arg>
<doc>If object is applicable, perform a mouse click by passing in the Squish object reference.</doc>
<status status="PASS" starttime="20230421 17:02:11.833" endtime="20230421 17:02:12.354"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230421 17:02:13.366" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20230421 17:02:12.355" endtime="20230421 17:02:13.366"/>
</kw>
<kw name="Screen Shot" library="GX1Testlib">
<var>${image_path}</var>
<doc>Capture the image from Screen and embedded  the image captured to the report
:param embedded_image_to_report: whether the image should be embedded into report
:return: the image file location</doc>
<msg timestamp="20230421 17:02:13.561" level="INFO" html="true">&lt;a href="Img_ae8750e5-a4f0-4bbe-8bef-387376c65aa9.png"&gt;&lt;img src="Img_ae8750e5-a4f0-4bbe-8bef-387376c65aa9.png" width="400"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.562" level="INFO">${image_path} = D:\Workspace\GX1\G1XAutomation\Demo_Auto_Test\TestReports\TEST_ROUND_1\Img_ae8750e5-a4f0-4bbe-8bef-387376c65aa9.png</msg>
<status status="PASS" starttime="20230421 17:02:13.367" endtime="20230421 17:02:13.562"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Camera</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:02:13.634" level="INFO" html="true">&lt;a href="Img_db5ff3fb-18ee-477e-b06d-2ed5bc4550e1.png"&gt;&lt;img src="Img_db5ff3fb-18ee-477e-b06d-2ed5bc4550e1.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.634" level="INFO" html="true">&lt;a href="Img_2cf196f7-5eed-41ee-bfd7-dda88fcfe45e.png"&gt;&lt;img src="Img_2cf196f7-5eed-41ee-bfd7-dda88fcfe45e.png" width="64"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:02:13.563" endtime="20230421 17:02:13.681"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Folder</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:02:13.707" level="INFO" html="true">&lt;a href="Img_866e35f3-b14d-48f0-b9aa-88d43ec49553.png"&gt;&lt;img src="Img_866e35f3-b14d-48f0-b9aa-88d43ec49553.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.708" level="INFO" html="true">&lt;a href="Img_1677b044-fed4-4927-94e1-304cdd1bddc9.png"&gt;&lt;img src="Img_1677b044-fed4-4927-94e1-304cdd1bddc9.png" width="63"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.736" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:02:13.681" endtime="20230421 17:02:13.737"/>
</kw>
<kw name="Compare Feature Rect" library="GX1Testlib">
<var>${result}</var>
<arg>${image_path}</arg>
<arg>PulsedRF</arg>
<arg>Setting</arg>
<doc>To compare the consistency of image  feature rect
:param screenshot_path: the image path that need to be verified.
:param sample_image_alias: the alias of the sample image
:param sample_rect_alias: the alias of the sample feature rect
:return: the consistency</doc>
<msg timestamp="20230421 17:02:13.759" level="INFO" html="true">&lt;a href="Img_6280bb6b-18ae-429d-9a49-710b92faa2f9.png"&gt;&lt;img src="Img_6280bb6b-18ae-429d-9a49-710b92faa2f9.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.759" level="INFO" html="true">&lt;a href="Img_b1b82f8e-be6c-47f7-84ac-8122eaad446d.png"&gt;&lt;img src="Img_b1b82f8e-be6c-47f7-84ac-8122eaad446d.png" width="61"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230421 17:02:13.789" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230421 17:02:13.738" endtime="20230421 17:02:13.789"/>
</kw>
<status status="PASS" starttime="20230421 17:02:11.794" endtime="20230421 17:02:13.789"/>
</test>
<kw name="Close Test" library="GX1Testlib" type="TEARDOWN">
<doc>Description:
Close all and cleanup after the test is done
exceptions.
Arguments:
    None
Return Value:
    None
Examples:
|close_test |</doc>
<msg timestamp="20230421 17:02:13.821" level="INFO">disconnecting from device</msg>
<msg timestamp="20230421 17:02:13.825" level="INFO">GX1 Simulator is stopped</msg>
<msg timestamp="20230421 17:02:13.859" level="INFO">Squish tester is stopped</msg>
<status status="PASS" starttime="20230421 17:02:13.792" endtime="20230421 17:02:13.860"/>
</kw>
<meta name="FW_VERSION">2.0</meta>
<meta name="SW_VERSION">1.0</meta>
<status status="PASS" starttime="20230421 17:01:31.970" endtime="20230421 17:02:13.861"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DEMO</stat>
<stat pass="1" fail="0" skip="0">MAINPAGE</stat>
<stat pass="1" fail="0" skip="0">SCREENSHOT</stat>
<stat pass="1" fail="0" skip="0">stimulation</stat>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="TEST DEMO">TEST DEMO</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
